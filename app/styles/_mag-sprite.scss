// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$mag-host-name: 'mag_host';
$mag-host-x: 0px;
$mag-host-y: 217px;
$mag-host-offset-x: 0px;
$mag-host-offset-y: -217px;
$mag-host-width: 168px;
$mag-host-height: 169px;
$mag-host-total-width: 1150px;
$mag-host-total-height: 1086px;
$mag-host-image: '../images/mag-sprite.png';
$mag-host: (0px, 217px, 0px, -217px, 168px, 169px, 1150px, 1086px, '../images/mag-sprite.png', 'mag_host', );
$mag-logo-name: 'mag_logo';
$mag-logo-x: 0px;
$mag-logo-y: 30px;
$mag-logo-offset-x: 0px;
$mag-logo-offset-y: -30px;
$mag-logo-width: 26px;
$mag-logo-height: 32px;
$mag-logo-total-width: 1150px;
$mag-logo-total-height: 1086px;
$mag-logo-image: '../images/mag-sprite.png';
$mag-logo: (0px, 30px, 0px, -30px, 26px, 32px, 1150px, 1086px, '../images/mag-sprite.png', 'mag_logo', );
$mag-map-object-name: 'mag_map-object';
$mag-map-object-x: 0px;
$mag-map-object-y: 62px;
$mag-map-object-offset-x: 0px;
$mag-map-object-offset-y: -62px;
$mag-map-object-width: 33px;
$mag-map-object-height: 47px;
$mag-map-object-total-width: 1150px;
$mag-map-object-total-height: 1086px;
$mag-map-object-image: '../images/mag-sprite.png';
$mag-map-object: (0px, 62px, 0px, -62px, 33px, 47px, 1150px, 1086px, '../images/mag-sprite.png', 'mag_map-object', );
$mag-star-big-name: 'mag_star--big';
$mag-star-big-x: 0px;
$mag-star-big-y: 386px;
$mag-star-big-offset-x: 0px;
$mag-star-big-offset-y: -386px;
$mag-star-big-width: 1150px;
$mag-star-big-height: 700px;
$mag-star-big-total-width: 1150px;
$mag-star-big-total-height: 1086px;
$mag-star-big-image: '../images/mag-sprite.png';
$mag-star-big: (0px, 386px, 0px, -386px, 1150px, 700px, 1150px, 1086px, '../images/mag-sprite.png', 'mag_star--big', );
$mag-star-small-name: 'mag_star--small';
$mag-star-small-x: 0px;
$mag-star-small-y: 0px;
$mag-star-small-offset-x: 0px;
$mag-star-small-offset-y: 0px;
$mag-star-small-width: 31px;
$mag-star-small-height: 30px;
$mag-star-small-total-width: 1150px;
$mag-star-small-total-height: 1086px;
$mag-star-small-image: '../images/mag-sprite.png';
$mag-star-small: (0px, 0px, 0px, 0px, 31px, 30px, 1150px, 1086px, '../images/mag-sprite.png', 'mag_star--small', );
$mag-star-name: 'mag_star';
$mag-star-x: 0px;
$mag-star-y: 109px;
$mag-star-offset-x: 0px;
$mag-star-offset-y: -109px;
$mag-star-width: 101px;
$mag-star-height: 108px;
$mag-star-total-width: 1150px;
$mag-star-total-height: 1086px;
$mag-star-image: '../images/mag-sprite.png';
$mag-star: (0px, 109px, 0px, -109px, 101px, 108px, 1150px, 1086px, '../images/mag-sprite.png', 'mag_star', );
$spritesheet-width: 1150px;
$spritesheet-height: 1086px;
$spritesheet-image: '../images/mag-sprite.png';
$spritesheet-sprites: ($mag-host, $mag-logo, $mag-map-object, $mag-star-big, $mag-star-small, $mag-star, );
$spritesheet: (1150px, 1086px, '../images/mag-sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
